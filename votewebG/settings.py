"""
Django settings for votewebG project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""
from django.conf import settings
from django.db.models.functions import Concat
from django.db.models import Value as V
import os
import pymysql
pymysql.install_as_MySQLdb()
import MySQLdb

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = 'va&ydjdv!hqox&yhv6-ud%zdc8k55_x1d%ez@ivgt&v7aj&zi)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_filters',
    'dal',
    'dal_select2' ,
    'crispy_forms',
    
    #apps
    'votewebG',
    'polls',
    'widget_tweaks',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'votewebG.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates')
            ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
          
        },
    },
]

WSGI_APPLICATION = 'votewebG.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "PRvote",
        "USER": "root",
        "PASSWORD": "",
        "HOST":"localhost",
        "PORT": "",
        "OPTIONS": {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'), 
]

MEDIA_URL='/media/'
MEDIA_ROOT= os.path.join(BASE_DIR, 'media/admin_pic')

STATICFILES_DIRS=(
    os.path.join(BASE_DIR,'static'),
)

LOGIN_REDIRECT_URL="polls/frontdex.html"


DJANGO_ELECT_USER_MODEL = getattr(settings,
    'DJANGO_ELECT_USER_MODEL', settings.AUTH_USER_MODEL)


"""
Function to filter a queryset on the user model with a free-form query.
Used by django_elect.autocomplete.AccountAutocomplete.
"""
DJANGO_ELECT_USER_AUTOCOMPLETE_FILTER = getattr(settings,
    'DJANGO_ELECT_USER_AUTOCOMPLETE_FILTER',
    lambda queryset, query: queryset.annotate(
        full_name=Concat('first_name', V(' '), 'last_name')
    ).filter(full_name__icontains=query))


"""
List of tuples to pass to Migration.depedencies for django_elect migrations
"""
DJANGO_ELECT_MIGRATION_DEPENDENCIES = getattr(settings,
    'DJANGO_ELECT_MIGRATION_DEPENDENCIES', [('auth', '0001_initial')])


"""
URL to redirect voters to who are not logged in.
"""
LOGIN_URL = getattr(settings, 'LOGIN_URL', '/loginform/')

FORM_RENDERER = 'django.forms.renderers.DjangoTemplates'